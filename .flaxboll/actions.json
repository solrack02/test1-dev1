{"1740068690073":{"actionType":"saveAll","createdAt":"1740068690073","actionID":"1740068690073","userID":"#TEMP","path":"system.capsules.c4b58d84-5a43-4729-8671-c29035495a2f.capsUseCodeInfo.capsUseInputs.sss_freeValue-0.capsIptTxtValue","oldValue":"// ---------- import Local Tools\nimport { getVarValue } from './getVarValue';\n\n// ---------- import Packs\nimport { Style, getStylesForProperty } from 'css-to-react-native';\n\n// ----------- set Style Variable Selection\nexport const getStlValues = (arrGetValues: string[]) => {\n  console.log('GET_VAR_VALUES', { arrGetValues });\n\n  const arrStyles = arrGetValues.map(string => {\n    console.log({ string });\n    return { aa: '' };\n  });\n  console.log('GET_VAR_VALUES', { arrStyles });\n\n  const allStls = arrStyles.flatMap(style => {\n    if (style.shadowOffset) return style;\n    console.log('GET_VAR_VALUES', { style });\n\n    const possibleValues = Object.keys(style);\n\n    const setPx = (stlVal: any) => {\n      const checkNum = typeof stlVal === 'number';\n      const condVal = checkNum ? String(stlVal) + 'px' : stlVal;\n\n      return condVal;\n    };\n\n    const result = possibleValues.flatMap(key => {\n      const stlVal = style[key];\n\n      const [condVar, varValue] = getVarValue(stlVal, 'noComponent');\n      console.log('GET_VAR_VALUES', { varValue });\n\n      if (!condVar) {\n        const valToPx = String(setPx(stlVal));\n        const process2 = getStylesForProperty(key, valToPx);\n        console.log('GET_VAR_VALUES', { process2 });\n\n        return process2;\n      }\n\n      const varToPx = String(setPx(varValue));\n      const process3 = getStylesForProperty(key, varToPx, true);\n      console.log('GET_VAR_VALUES', { process3 });\n\n      return process3;\n    });\n\n    console.log('GET_VAR_VALUES', { result });\n    return result as Style[];\n    // return result;\n  });\n\n  console.log('GET_VAR_VALUES', { allStls });\n\n  return allStls;\n};\n","newValue":"// ---------- import Local Tools\nimport { getVarValue } from './getVarValue';\n\n// ---------- import Packs\nimport { Style, getStylesForProperty } from 'css-to-react-native';\n\n// ----------- set Style Variable Selection\nexport const getStlValues = (arrGetValues: string[]) => {\n  console.log('GET_VAR_VALUES', { arrGetValues });\n\n  const arrStyles = arrGetValues.map(string => {\n    console.log({ string });\n    return { aa: '' };\n  });\n  console.log('GET_VAR_VALUES', { arrStyles });\n\n  const allStls = arrStyles.flatMap(style => {\n    if (style.shadowOffset) return style;\n    console.log('GET_VAR_VALUES', { style });\n\n    const possibleValues = Object.keys(style);\n\n    const setPx = (stlVal: any) => {\n      const checkNum = typeof stlVal === 'number';\n      const condVal = checkNum ? String(stlVal) + 'px' : stlVal;\n\n      return condVal;\n    };\n\n    const result = possibleValues.flatMap(key => {\n      const stlVal = style[key];\n\n      const [condVar, varValue] = getVarValue(stlVal, 'noComponent');\n      console.log('GET_VAR_VALUES', { varValue });\n\n      if (!condVar) {\n        const valToPx = String(setPx(stlVal));\n        const process2 = getStylesForProperty(key, valToPx);\n        console.log('GET_VAR_VALUES', { process2 });\n\n        return process2;\n      }\n\n      const varToPx = String(setPx(varValue));\n      const process3 = getStylesForProperty(key, varToPx, true);\n      console.log('GET_VAR_VALUES', { process3 });\n\n      return process3;\n    });\n\n    console.log('GET_VAR_VALUES', { result });\n    return result as Style[];\n    // return result;\n  });\n\n  console.log('GET_VAR_VALUES', { allStls });\n\n  return allStls;\n};"}}