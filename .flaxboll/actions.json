{"1739565821554":{"actionType":"saveAll","createdAt":"1739565821554","actionID":"1739565821554","userID":"#TEMP","path":"system.capsules.65524307-852d-4c4e-a8f4-7d2a51915f71.capsUseCodeInfo.capsUseInputs.sss_freeValue-0.capsIptTxtValue","oldValue":"","newValue":"// ---------- import Packs\nimport React from 'react';\nimport { Text as RNText } from 'react-native';\nimport { useData } from '../../..';\n\ntype Tprops = {\n  pass: { arrProps: any; arrStyles: any; children: any; args?: any };\n};\n\nexport const Text = (props: Tprops) => {\n  // ---------- set Capsules Inputs\n  const { arrProps, arrStyles, args } = props.pass;\n  let { children } = props.pass;\n\n  const testeData = useData(ct => ct.all);\n  console.log({ testeData });\n\n  if (typeof children === 'object') {\n    const newMap = children.map((item, idx) => {\n      if (typeof item === 'function') {\n        console.log({ item });\n        const test = item(args);\n\n        return test;\n      }\n\n      return item;\n    });\n\n    children = newMap.reduce((prev, curr) => prev + curr, '');\n  }\n\n  // ------- set User Element Properties (If Exists)\n  const userElProps = {};\n\n  for (const object of arrProps) {\n    for (const keyProp in object) {\n      const valueProp = object[keyProp];\n      userElProps[keyProp] = valueProp;\n    }\n  }\n\n  const allProps = {\n    style: arrStyles,\n    children,\n\n    ...userElProps,\n  };\n\n  // ---------- set Render\n  return <RNText {...allProps} />;\n};\n"}}