{"1740080392619":{"actionType":"saveAll","createdAt":"1740080392619","actionID":"1740080392619","userID":"#TEMP","path":"system.capsules.65eb5d8f-8e07-4a74-9b38-d27edaf9cedb.capsUseCodeInfo.capsUseInputs.sss_freeValue-0.capsIptTxtValue","oldValue":"","newValue":"// ---------- import Packs\nimport React from 'react';\nimport { FlatList } from 'react-native';\n\n// ---------- import Local Tools\nimport { mapElements, pathSel } from '../project';\nimport { useData } from '../../..';\n\ntype Tprops = {\n  pass: {\n    elementProperties: any;\n    pData: any;\n    itemElements: any;\n    args: any;\n  };\n};\n\n// FlatList2 - ccc_flatList (newBase)\nexport const FlatList2 = (props: Tprops) => {\n  // ------- set Caps Inputs\n  const { elementProperties, pData, itemElements, args } = props.pass;\n\n  // ---------- set Data Listener\n  console.log({ elementProperties });\n\n  let watchData = '';\n  if (typeof pData === 'string') watchData = useData(ct => pathSel(ct, pData));\n  // console.log({ watchData });\n  // ---------- set List Item\n  const renderItem = ({ item, index }: any) => (\n    <>{mapElements(itemElements, { item, index })}</>\n  );\n\n  // ------- set User Element Properties (If Exists)\n  let userElProps = {};\n\n  for (const object of elementProperties) {\n    const isFnc = typeof object === 'function';\n    let newObj = {};\n    if (isFnc) {\n      console.log('IS A FUNCTION !!!!!!!!!!');\n      // console.log({ object });\n      // console.log({ newObj });\n      newObj = object();\n      userElProps = { ...userElProps, ...newObj };\n    }\n\n    if (!isFnc) {\n      console.log('NOT FUNCTION');\n      // console.log({ object });\n      // console.log({ newObj });\n      for (const keyProp in object) {\n        const valueProp = object[keyProp];\n        userElProps[keyProp] = valueProp;\n      }\n    }\n  }\n\n  const allProps = {\n    data: watchData,\n    renderItem,\n\n    ...userElProps,\n  };\n\n  // console.log({ elementProperties, allProps });\n\n  console.log({ allProps });\n\n  // ------- set Render\n  return <FlatList {...allProps} />;\n};"}}